<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE configuration PUBLIC "-//mybatis.org//DTD Config 3.0//EN" "http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>
<!-- 可以配置多个运行环境，但是每个 SqlSessionFactory 实例只能选择一个运行环境  
  一、development:开发模式
   二、work：工作模式-->
 <environments default="development">
 <!--id属性必须和上面的default一样  -->
    <environment id="development">
    <!--事务管理器
        一、JDBC：这个配置直接简单使用了 JDBC 的提交和回滚设置。它依赖于从数据源得到的连接来管理事务范围
        二、MANAGED：这个配置几乎没做什么。它从来不提交或回滚一个连接。而它会让容器来管理事务的整个生命周期
            比如 spring 或 JEE 应用服务器的上下文，默认情况下，它会关闭连接。然而一些容器并不希望这样，
            因此如果你需要从连接中停止它，就可以将 closeConnection 属性设置为 false，比如：
            <transactionManager type="MANAGED">
                <property name="closeConnection" value="false"/>
            </transactionManager>
      -->
      <transactionManager type="JDBC"/>
      <!--dataSource 元素使用标准的 JDBC 数据源接口来配置 JDBC 连接对象源  -->
      <dataSource type="POOLED">
        <property name="driver" value="com.mysql.jdbc.Driver"/>
        <property name="url" value="jdbc:mysql://rm-wz947lnq4xhk7b1f4so.mysql.rds.aliyuncs.com/ordermanager?useSSL=false&amp;serverTimezone=GMT%2B8"/>
        <property name="username" value="root"/>
        <property name="password" value="123456789Aa"/>
      </dataSource>
    </environment>
  </environments>
  <mappers>
       <!-- 注册personMapper.xml文件，
       personMapper.xml位于com.ys.bean这个包下，所以resource写成com/ys/bean/personMapper.xml-->
      
       
		
		<mapper class="com.dao.EmployeeMapper"/>
		<mapper class="com.dao.CustomerMapper"/>
		<mapper class="com.dao.LogMapper"/>
		<mapper class="com.dao.OrderdetailMapper"/>
		<mapper class="com.dao.OrdermasterMapper"/>
		<mapper class="com.dao.ProductMapper"/>
		<mapper class="com.dao.UserMapper"/>
		<mapper class="com.dao.EChartsMapper"/>
		<mapper class="com.dao.Mapper"/>
	</mappers>
</configuration>
